#!/bin/sh

BLUE='\033[94m'

RED='\033[91m'

GREEN='\033[92m'

ORANGE='\033[93m'

RESET='\e[0m'

TARGET="$1"


if [ -z $TARGET ]; then
	echo    "                      __                __       "
	echo    "    _______ _________/ /_  ________  __/ /_      "
	echo    "   / ____/ '__/ __  / __ \/ ____/ / / /  _ \     "
	echo    "  / /__oo /  / /_/ / /_/ (___  ) /_/ / /_/ /     "
	echo    "  \____/_/   \___/\_____/_____/\__,_/_.___/v1.0  "
	echo    "\t by SCR1P7K1DD13"
	echo ""
	echo    "$RED [-] Usage: grabsub <target>      $RESET"
	echo    "$RED Example: ./grabsub.sh google.com $RESET"
	exit
fi

if [ $TARGET = "--help" ]; then
	echo    "                      __                __       "
	echo    "    _______ _________/ /_  ________  __/ /_      "
	echo    "   / ____/ '__/ __  / __ \/ ____/ / / /  _ \     "
	echo    "  / /__oo /  / /_/ / /_/ (___  ) /_/ / /_/ /     "
	echo    "  \____/_/   \___/\_____/_____/\__,_/_.___/v1.0  "
	echo    "\t by SCR1P7K1DD13"
	echo ""
	echo    "$RED [-] Usage: grabsub <target>     $RESET"
	echo    "$RED Example: ./grabsub.sh google.com$RESET"
	exit
fi


	echo    "                      __                __       "
	echo    "    _______ _________/ /_  ________  __/ /_      "
	echo    "   / ____/ '__/ __  / __ \/ ____/ / / /  _ \     "
	echo    "  / /__oo /  / /_/ / /_/ (___  ) /_/ / /_/ /     "
	echo    "  \____/_/   \___/\_____/_____/\__,_/_.___/v1.0  "
	echo    "\t by SCR1P7K1DD13"

echo "$RED + -- ----------------------------=[Gathering Subdomains]=--------------------- -- +$RESET"

if [ -d "recon/$TARGET"  ]
then 
   echo "" 
elif [ ! -d "recon/$TARGET" ]
then
    mkdir recon/$TARGET
fi

touch /tmp/curl.out
touch /tmp/temp-1.txt
touch /tmp/temp-2.txt
touch /tmp/temp-3.txt

echo "$GREEN [+] Executing crt.sh module$RESET"
curl -s https://crt.sh/?q=$TARGET > /tmp/curl.out
cat /tmp/curl.out | grep $TARGET | grep TD | sed -e 's/<//g' | sed -e 's/>//g' | sed -e 's/TD//g' | sed -e 's/\///g' | sed -e 's/ //g' | sed -n '1!p' | sort -u > /tmp/temp-1.txt

echo "$GREEN [+] Executing subfinder module $RESET"
enum1=`$(pwd)/tools/subfinder/subfinder -d $TARGET -silent -o /tmp/temp-2.txt`

echo "$GREEN [+] Executing sublist3r module $RESET"
enum2=`sublist3r -d $TARGET -o /tmp/temp-3.txt 2> /dev/null` 

echo "$GREEN [+] Executing assetfinder module $RESET"
enum3=`$(pwd)/tools/assetfinder/assetfinder --subs-only $TARGET >> /tmp/temp-1.txt` 

echo "$GREEN [+] Executing bufferover module $RESET"
enum4=`curl -s "https://dns.bufferover.run/dns?q=.$TARGET" | jq -r .FDNS_A[] | cut -d "," -f2 >> /tmp/temp-1.txt`

echo "$GREEN [+] Executing web archive module $RESET"
enum5=`curl -s "http://web.archive.org/cdx/search/cdx?url=*.$TARGET/*&output=text&fl=original&collapse=urlkey" | sed -e 's_https*://__' -e "s/\/.*//" | cut -d ":" -f1 | sort -u >> /tmp/temp-1.txt`

echo "$GREEN [+] Executing threatcrowd module $RESET"
enum6=`curl -s "https://www.threatcrowd.org/searchApi/v2/domain/report/?domain=$TARGET" | jq -r .subdomains[] | sort -u >> /tmp/temp-1.txt`

echo "$GREEN [+] Executing hackertarget module $RESET"
enum7=`curl -s "https://api.hackertarget.com/hostsearch/?q=$TARGET" | cut -d "," -f1 >> /tmp/temp-1.txt`

echo "$GREEN [+] Executing omnisint module $RESET"
enum8=`curl -s "https://sonar.omnisint.io/subdomains/$TARGET" | jq '.[]' | sed 's/"//g' | sort -u >> /tmp/temp-1.txt`
cat /tmp/temp-1.txt /tmp/temp-2.txt /tmp/temp-3.txt > recon/$TARGET/$TARGET-all.txt | sort -u 

#removing temporary files generated by the scanner
rm /tmp/temp-1.txt /tmp/temp-2.txt /tmp/temp-3.txt /tmp/curl.out
unique_subs=`wc --lines < recon/$TARGET/$TARGET-all.txt`

echo "$ORANGE $unique_subs unique subdomains identified"
echo "$ORANGE filtering out domains with status-code=404$RESET"

#you can filter out different status codes below 
alive_scan=`cat recon/$TARGET/$TARGET-all.txt | tools/httpx/httpx -silent -fc 404 > recon/$TARGET/$TARGET-alive.txt`
filtered_subs=`wc --lines < recon/$TARGET/$TARGET-alive.txt`
count=`expr $unique_subs - $filtered_subs`
echo "$ORANGE filtered $count domains with 404 status code $RESET"
echo "$ORANGE Taking screeshots of alive targets $RESET"
mkdir $(pwd)/recon/$TARGET/screenshots
screenshot=`$(pwd)/tools/gowitness/gowitness file -f $(pwd)/recon/$TARGET/$TARGET-alive.txt -P $(pwd)/recon/$TARGET/screenshots/`
echo "$RED [+] Domains saved to: recon/$TARGET/$TARGET-all.txt"
echo "$RED [+] Alive domains saved to: recon/$TARGET/$TARGET-alive.txt"
echo "$RED [+] Screeenshots saved to: recon/$TARGET/screenshots"
echo "$RED + -- ----------------------------=[Done!]=----------------------------------- -- +$RESET"
